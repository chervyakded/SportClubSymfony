# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    EfTech\SportClub\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    EfTech\SportClub\Entity\BenefitPassRepositoryInterface:
        factory: ['@Doctrine\ORM\EntityManagerInterface', 'getRepository']
        arguments:
            $entityName: EfTech\SportClub\Entity\BenefitPass

    EfTech\SportClub\Entity\PassRepositoryInterface:
        factory: ['@Doctrine\ORM\EntityManagerInterface', 'getRepository']
        arguments:
            $entityName: EfTech\SportClub\Entity\Pass

    EfTech\SportClub\Entity\ProgramRepositoryInterface:
        factory: ['@Doctrine\ORM\EntityManagerInterface', 'getRepository']
        arguments:
            $entityName: EfTech\SportClub\Entity\Programme

    EfTech\SportClub\Entity\CustomerRepositoryInterface:
        factory: ['@Doctrine\ORM\EntityManagerInterface', 'getRepository']
        arguments:
            $entityName: EfTech\SportClub\Entity\Customer

    EfTech\SportClub\Entity\UserRepositoryInterface:
        factory: ['@Doctrine\ORM\EntityManagerInterface', 'getRepository']
        arguments:
            $entityName: EfTech\SportClub\Entity\UserRepository\UserDataProvider

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
